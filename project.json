{
  "default_localization" : "en",
  "dependencies" : [
    {
      "identity" : "mockingbird",
      "requirement" : {
        "range" : [
          {
            "lower_bound" : "0.20.0",
            "upper_bound" : "0.21.0"
          }
        ]
      },
      "type" : "sourceControl",
      "url" : "https://github.com/birdrides/mockingbird.git"
    }
  ],
  "manifest_display_name" : "Evervault",
  "name" : "Evervault",
  "path" : "/Users/jeremywagemans/Evervault/evervault-ios",
  "platforms" : [
    {
      "name" : "ios",
      "version" : "15.0"
    }
  ],
  "products" : [
    {
      "name" : "EvervaultCore",
      "targets" : [
        "EvervaultCore"
      ],
      "type" : {
        "library" : [
          "automatic"
        ]
      }
    },
    {
      "name" : "EvervaultInputs",
      "targets" : [
        "EvervaultInputs"
      ],
      "type" : {
        "library" : [
          "automatic"
        ]
      }
    },
    {
      "name" : "EvervaultCages",
      "targets" : [
        "EvervaultCages",
        "AttestationBindings"
      ],
      "type" : {
        "library" : [
          "automatic"
        ]
      }
    }
  ],
  "targets" : [
    {
      "c99name" : "EvervaultInputsTests",
      "module_type" : "SwiftTarget",
      "name" : "EvervaultInputsTests",
      "path" : "Tests/EvervaultInputsTests",
      "product_dependencies" : [
        "Mockingbird"
      ],
      "sources" : [
        "Utils/CreditCardFormatterTests.swift",
        "Utils/CreditCardValidatorTests.swift"
      ],
      "target_dependencies" : [
        "EvervaultCore",
        "EvervaultInputs"
      ],
      "type" : "test"
    },
    {
      "c99name" : "EvervaultInputs",
      "module_type" : "SwiftTarget",
      "name" : "EvervaultInputs",
      "path" : "Sources/EvervaultInputs",
      "product_memberships" : [
        "EvervaultInputs"
      ],
      "resources" : [
        {
          "path" : "/Users/jeremywagemans/Evervault/evervault-ios/Sources/EvervaultInputs/Resources/nl.lproj/Localizable.strings",
          "rule" : {
            "process" : {
              "localization" : "nl"
            }
          }
        },
        {
          "path" : "/Users/jeremywagemans/Evervault/evervault-ios/Sources/EvervaultInputs/Resources/en.lproj/Localizable.strings",
          "rule" : {
            "process" : {
              "localization" : "en"
            }
          }
        },
        {
          "path" : "/Users/jeremywagemans/Evervault/evervault-ios/Sources/EvervaultInputs/Resources/Assets.xcassets",
          "rule" : {
            "process" : {

            }
          }
        }
      ],
      "sources" : [
        "Model/CreditCardType.swift",
        "Model/PaymentCardData+Validation.swift",
        "Model/PaymentCardData.swift",
        "UI/InlinePaymentCardInputStyle.swift",
        "UI/PaymentCardInput.swift",
        "UI/PaymentCardInputStyle.swift",
        "UI/PaymentCardInputStyleConfiguration.swift",
        "UI/PaymentCardInputStyleKey.swift",
        "UI/RowsPaymentCardInputStyle.swift",
        "Utils/CreditCardFormatter.swift",
        "Utils/CreditCardValidator.swift",
        "Utils/LocalizedString.swift"
      ],
      "target_dependencies" : [
        "EvervaultCore"
      ],
      "type" : "library"
    },
    {
      "c99name" : "EvervaultCoreTests",
      "module_type" : "SwiftTarget",
      "name" : "EvervaultCoreTests",
      "path" : "Tests/EvervaultCoreTests",
      "product_dependencies" : [
        "Mockingbird"
      ],
      "sources" : [
        "MockingbirdMocks/EvervaultCoreMocks.generated.swift",
        "core/BasicTest.swift",
        "core/DecryptTest.swift",
        "core/HttpKeysLoaderTest.swift",
        "core/curves/asn1Test.swift",
        "core/dataHandlers/ArrayHandlerTest.swift",
        "core/dataHandlers/BooleanHandlerTest.swift",
        "core/dataHandlers/DataHandlersTest.swift",
        "core/dataHandlers/DictionaryHandlerTest.swift",
        "core/dataHandlers/NumberHandler.swift",
        "core/dataHandlers/StringHandlerTest.swift",
        "core/format/R1StdEncryptionFormatterTest.swift",
        "core/keys/CageKeyTest.swift",
        "core/utils/crc32Test.swift",
        "core/utils/ecPointCompressTest.swift"
      ],
      "target_dependencies" : [
        "EvervaultCore"
      ],
      "type" : "test"
    },
    {
      "c99name" : "EvervaultCore",
      "module_type" : "SwiftTarget",
      "name" : "EvervaultCore",
      "path" : "Sources/EvervaultCore",
      "product_memberships" : [
        "EvervaultCore",
        "EvervaultInputs",
        "EvervaultCages"
      ],
      "sources" : [
        "Config.swift",
        "Evervault.swift",
        "core/Crypto.swift",
        "core/CryptoDataCipher.swift",
        "core/CryptoLoader.swift",
        "core/DataCipher.swift",
        "core/DataType.swift",
        "core/EncryptedData.swift",
        "core/EncryptionService.swift",
        "core/Http.swift",
        "core/HttpDecrypter.swift",
        "core/HttpKeysLoader.swift",
        "core/curves/asn1.swift",
        "core/curves/buildEncoder.swift",
        "core/curves/createCurve.swift",
        "core/curves/p256.swift",
        "core/dataHandlers/ArrayHandler.swift",
        "core/dataHandlers/BooleanHandler.swift",
        "core/dataHandlers/BytesHandler.swift",
        "core/dataHandlers/DataHandler.swift",
        "core/dataHandlers/DataHandlers.swift",
        "core/dataHandlers/DictionaryHandler.swift",
        "core/dataHandlers/NumberHandler.swift",
        "core/dataHandlers/StringHandler.swift",
        "core/format/EncryptionFormatter.swift",
        "core/format/File.swift",
        "core/format/R1StdEncryptionFormatter.swift",
        "core/keys/CageKey.swift",
        "core/keys/CryptoSharedSecretDeriver.swift",
        "core/keys/GeneratedSharedKey.swift",
        "core/keys/SharedSecretDeriver.swift",
        "utils/EvervaultError.swift",
        "utils/crc32.swift",
        "utils/ecPointCompress.swift"
      ],
      "type" : "library"
    },
    {
      "c99name" : "EvervaultCages",
      "module_type" : "SwiftTarget",
      "name" : "EvervaultCages",
      "path" : "Sources/EvervaultCages",
      "product_memberships" : [
        "EvervaultCages"
      ],
      "sources" : [
        "AttestationSessionDelegate.swift"
      ],
      "target_dependencies" : [
        "AttestationBindings",
        "EvervaultCore"
      ],
      "type" : "library"
    },
    {
      "c99name" : "AttestationBindings",
      "module_type" : "BinaryTarget",
      "name" : "AttestationBindings",
      "path" : "remote/archive/AttestationBindings.xcframework.zip",
      "product_memberships" : [
        "EvervaultCages"
      ],
      "sources" : [

      ],
      "type" : "binary"
    }
  ],
  "tools_version" : "5.7.1"
}
